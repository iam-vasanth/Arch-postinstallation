sudo bash -c "$(curl -sSL https://raw.githubusercontent.com/iam-vasanth/Arch-postinstallation/main/Scripts/ArchPI.sh)"

Ideas :
Creating VM and automating it.

Step-1 : Check for updates

sudo pacman -Syu

==========================================================================================================================

Step-2 : Installing timeshift and creating a backup with home directory.

sudo pacman -S timeshift

==========================================================================================================================

Step-3 : Installing AUR helper.

yay :
sudo pacman -S --needed git base-devel && git clone https://aur.archlinux.org/yay.git && cd yay && makepkg -si

paru :
sudo pacman -S --needed base-devel && git clone https://aur.archlinux.org/paru.git && cd paru && makepkg -si

==========================================================================================================================

Step-4 : Installing necessary packages

sudo pacman -S --needed firefox neovim plymouth fuse steam wine winetricks wine-mono wine-gecko flatpak partitionmanager discord spotify-launcher

**Virt-manager setup**

sudo pacman -S qemu-full libvirt-daemon virt-manager virt-viewer bridge-utils libguestfs swtpm
sudo systemctl enable --now libvirtd
sudo usermod -aG libvirt zoro

===========================================================================================================================

Step-5 : Playmouth with monoarch theme

1. ADD A HOOK

sudo nvim /etc/mkinitcpio.conf

HOOKS = (....plymouth....)
**ADD IT AFTER "udev" **

2. BUILD THE mkinitcpio.conf

sudo mkinitcpio -p linux
**REPLACE LINUX WITH THE KERNAL YOU HAVE**

3. CONFIGURE AND UPDATE GRUB

sudo nvim /etc/default/grub

In "GRUB_CMDLINE_LINUX_DEFAULT" parameters add "splash rd.udev.log_priority=3 vt.global_cursor_default=0". Should look something like this..

GRUB_CMDLINE_LINUX_DEFAULT="...... splash rd.udev.log_priority=3 vt.global_cursor_default=0"

sudo grub-mkconfig -o /boot/grub/grub.cfg

4. INSTALL MONOARRCH THEME AND APPLY IT.

yay -S plymouth-theme-monoarch

sudo plymouth-set-default-theme -R monoarch

Reboot the PC.

=============================================================================================================================

Optional :

If you have linux and linux-lts kernals installed and grub defaults to linux-lts. You can change it to linux by doing this

sudo nvim /etc/default/grub

Add this following line

# Linux-LTS to Linux
GRUB_TOP_LEVEL="/boot/vmlinuz-linux"

# How to make network connection work in guest machines with firewalld on your host system


Method-1 - Works
sudo systemctl enable firewalld
sudo systemctl start firewalld
sudo systemctl net.ipv4.ip_forward=1
sudo systemctl net.ipv6.conf.all.forwarding=1
ip link
ip route get 8.8.8.8
sudo firewall-cmd --zone=external --change-interface=wlan0 --permanent
sudo firewall-cmd --zone=internal --change-interface=virbr0 --permanent
sudo firewall-cmd --reload
sudo firewall-cmd --permanent --new-policy int2ext
sudo firewall-cmd --permanent --policy  int2ext --add-ingress-zone internal
sudo firewall-cmd --permanent --policy  int2ext --add-egress-zone external
sudo firewall-cmd --permanent --policy int2ext --set-target ACCEPT
sudo firewall-cmd --reload
sudo systemctl restart firewalld
sudo systemctl restart libvirtd

Method-2 - yet to test
# Create a zone for libvirt
sudo firewall-cmd --permanent --new-zone=libvirt

# Enable masquerading on the libvirt zone
sudo firewall-cmd --permanent --zone=libvirt --add-masquerade

# Add the virtual bridge interface to the libvirt zone
sudo firewall-cmd --permanent --zone=libvirt --add-interface=virbr0

# Reload the firewall to apply changes
sudo firewall-cmd --reload

# Start the default network if not already running
sudo virsh net-start default

# Enable autostart for the default network
sudo virsh net-autostart default

echo "net.ipv4.ip_forward = 1" | sudo tee /etc/sysctl.d/99-network.conf
sudo sysctl -p /etc/sysctl.d/99-network.conf

# How to make network connectinon in guest with UFW firewall on your host system

sudo nvim /etc/default/ufw

Change DROP to ACCEPT

DEFAULT_FORWARD_POLICY="ACCEPT"

sudo nvim /etc/ufw/before.rules

Add this below block at the end.

# Allow forwarding for libvirtd
*nat
:POSTROUTING ACCEPT [0:0]
-A POSTROUTING -s 192.168.122.0/24 -o wlan0 -j MASQUERADE
commit

Add this below block after "*filter" before "commit"

-A ufw-before-forward -i virbr0 -j ACCEPT
-A ufw-before-forward -o virbr0 -j ACCEPT